name: Build and Release

on:
  push:
    branches:
      - "**"

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Run tests
        run: |
          cp .env.example .env
          python manage.py test

      - name: Flake8
        run: |
          flake8 .

  build-and-push:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build Docker image
        run: |
          docker build -t demos:latest .

      - name: Push Docker image
        run: |
          docker tag demos:latest ${{ secrets.DOCKERHUB_USERNAME }}/demos:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/demos:latest

      - name: Pull Docker image
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
          ssh -i ~/.ssh/id_rsa ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} '
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/demos:latest && \
            docker rm -f demos || true && \
            docker run -d \
              --name demos \
              -p 18443:80 \
              -p 2222:22 \
              -v /srv/demos/db.sqlite3:/srv/demos/db.sqlite3 \
              -v /srv/demos/.env:/srv/demos/.env \
              ${{ secrets.DOCKERHUB_USERNAME }}/demos:latest
          '
